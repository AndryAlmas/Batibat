@{
    ViewBag.Title = "Modifier Échafaudage";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@model Batibatlocation.Models.Echafaudage

<h3>Modifier Échafaudage</h3>
@using (Html.BeginForm("EditEchafaudage", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.ImageUrl)

    <p class="lead w-100">
        Vous pouvez modifier les champs et enregistrer pour appliquer les modifications.
    </p>
    <hr />
    <br />
    <div class="form-group">
        @Html.LabelFor(model => model.Nom, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nom, new { htmlAttributes = new { @class = "form-control", placeholder = "Nom de l'échafaudage" } })
            @Html.ValidationMessageFor(model => model.Nom, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "4", placeholder = "Description de l'échafaudage" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Prix, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Prix, new { htmlAttributes = new { @class = "form-control", placeholder = "Prix en €" } })
            @Html.ValidationMessageFor(model => model.Prix, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="custom-file">
                <input type="file" name="imageFile" id="imageFile" class="custom-file-input" accept="image/*">
                <label class="custom-file-label" for="imageFile">Choisir une image</label>
            </div>
            @if (!string.IsNullOrEmpty(Model.ImageUrl))
            {
                <div class="mt-3">
                    <img src="@Model.ImageUrl" alt="@Model.Nom" style="max-width: 100px; height: auto;" />
                    <p class="mt-2"><strong>URL de l'image:</strong> @Model.ImageUrl</p>
                </div>
            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SpecificheTechniques, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.SpecificheTechniques, new { @class = "form-control", rows = "4", placeholder = "Spécifications techniques" })
            @Html.ValidationMessageFor(model => model.SpecificheTechniques, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Enregistrer" class="btn btn-primary" />
            <a href="@Url.Action("Echafaudages", "Admin")" class="btn btn-secondary">Annuler</a>
        </div>
    </div>
}

